AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Parameters:
  S3BucketLambdasLocation:
    Type: String
    Description: Enter S3 Bucket Artifact where lambdas are stored.
  S3KeyLandingPage:
    Type: String
    Description: Enter S3 Key of landing page lambda zip.
  S3KeyAddDog:
    Type: String
    Description: Enter S3 Key of add dog lambda zip.
  S3KeyValidateDog:
    Type: String
    Description: Enter S3 Key of validate dog lambda zip.
  S3KeyGetDogs:
    Type: String
    Description: Enter S3 Key of get dog lambda zip.
  S3KeyCustomFunction:
    Type: String
    Description: Enter S3 Key of custom function zip.

Resources:
  ValidateDogFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SQSAccess
                Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:GetQueueUrl
                Resource:
                  - "*"

  GetDogsFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaDynamoPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: DAccess
                Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                Resource:
                  - "*"

  AddDogFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaSQSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SQSAccess
                Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:BatchWriteItem
                  - sqs:SendMessage
                  - sqs:GetQueueUrl
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - "*"

  GetDogsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketLambdasLocation
        S3Key: !Ref S3KeyGetDogs
      Handler: index.handler
      Runtime: nodejs18.x
      Role: !GetAtt GetDogsFunctionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref DogDynamoDBTable

  ValidateDogFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketLambdasLocation
        S3Key: !Ref S3KeyValidateDog
      Handler: index.handler
      Runtime: nodejs18.x
      Role: !GetAtt ValidateDogFunctionRole.Arn
      Environment:
        Variables:
          QUEUE_URL: !GetAtt MessageQueue.QueueUrl

  AddDogFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketLambdasLocation
        S3Key: !Ref S3KeyAddDog
      Handler: index.handler
      Runtime: nodejs18.x
      Role: !GetAtt AddDogFunctionRole.Arn
      DeadLetterConfig:
        TargetArn: !GetAtt MessageDeadLetterQueue.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref DogDynamoDBTable

  AddDogFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt MessageQueue.Arn
      FunctionName: !GetAtt AddDogFunction.Arn
      MaximumBatchingWindowInSeconds: 0

  DogsApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: DogsApiGateway

  DogsApiGatewayDeployment:
    DependsOn:
      - ValidateDogMethod
      - LandingPageMethod
      - GetDogsMethod
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref DogsApiGateway
      StageName: test

  ValidateDogApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DogsApiGateway
      ParentId: !GetAtt DogsApiGateway.RootResourceId
      PathPart: validate-dog

  ValidateDogMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DogsApiGateway
      ResourceId: !Ref ValidateDogApiResource
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ValidateDogFunction.Arn}/invocations"
        TimeoutInMillis: 29000

  GetDogsApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DogsApiGateway
      ParentId: !GetAtt DogsApiGateway.RootResourceId
      PathPart: get-dogs

  GetDogsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DogsApiGateway
      ResourceId: !Ref GetDogsApiResource
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetDogsFunction.Arn}/invocations"
        TimeoutInMillis: 29000

  ApiGatewayGetDogsFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GetDogsFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DogsApiGateway}/*/*/*"

  ApiGatewayValidateDogInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ValidateDogFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DogsApiGateway}/*/*/*"

  DogDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Name"
          AttributeType: "S"
        - AttributeName: "Breed"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Name"
          KeyType: "HASH"
        - AttributeName: "Breed"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "4"
        WriteCapacityUnits: "4"
      TableName: DogsTable

  MessageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: AddDogQueue
      DelaySeconds: 0
      VisibilityTimeout: 30

  MessageDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: AddDogDeadLetterQueue
      DelaySeconds: 0
      VisibilityTimeout: 30

  LandingDogsApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DogsApiGateway
      ParentId: !GetAtt DogsApiGateway.RootResourceId
      PathPart: landing

  LandingPageMethod:
    DependsOn:
      - S3CustomResource
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DogsApiGateway
      ResourceId: !Ref LandingDogsApiResource
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS
        IntegrationHttpMethod: GET
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:s3:path/${LandingPageBucket}/static/landing-page/index.html
        TimeoutInMillis: 29000
        Credentials: !GetAtt GetS3BucketRole.Arn
